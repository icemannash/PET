{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "Original1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Original2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Original3"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Original4"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Original5"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Original6"
				},
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "OriginalSQL"
				},
				{
					"linkedService": {
						"referenceName": "petserver26",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "BuildingTable",
					"description": " "
				},
				{
					"name": "LandTable"
				},
				{
					"name": "Street"
				},
				{
					"name": "Interior"
				},
				{
					"name": "Garage"
				},
				{
					"name": "Exterior"
				},
				{
					"name": "Sales"
				},
				{
					"name": "Yearbuilthigher1900"
				},
				{
					"name": "RemovePoolQualityColumn"
				},
				{
					"name": "cast1"
				},
				{
					"name": "cast2"
				},
				{
					"name": "cast3"
				},
				{
					"name": "cast4"
				},
				{
					"name": "cast5"
				},
				{
					"name": "cast6"
				},
				{
					"name": "cast7"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "rank1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "assert1"
				},
				{
					"name": "select2"
				},
				{
					"name": "aggregate2"
				},
				{
					"name": "surrogateKey2"
				},
				{
					"name": "sort2"
				},
				{
					"name": "assert2"
				},
				{
					"name": "surrogateKey3"
				},
				{
					"name": "sort3"
				},
				{
					"name": "assert3"
				},
				{
					"name": "surrogateKey4"
				},
				{
					"name": "sort4"
				},
				{
					"name": "assert4"
				},
				{
					"name": "aggregate3"
				},
				{
					"name": "surrogateKey5"
				},
				{
					"name": "sort5"
				},
				{
					"name": "assert5"
				},
				{
					"name": "surrogateKey6"
				},
				{
					"name": "sort6"
				},
				{
					"name": "assert6"
				},
				{
					"name": "BuildingDimensiontable"
				},
				{
					"name": "MeasureBuilding"
				},
				{
					"name": "select3"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> Original1",
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> Original2",
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Original3",
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Original4",
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Original5",
				"source(output(",
				"          Id as string,",
				"          MSSubClass as string,",
				"          MSZoning as string,",
				"          LotFrontage as string,",
				"          LotArea as string,",
				"          Street as string,",
				"          Alley as string,",
				"          LotShape as string,",
				"          LandContour as string,",
				"          Utilities as string,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Neighborhood as string,",
				"          Condition1 as string,",
				"          Condition2 as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          OverallCond as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as string,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as string,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          BsmtQual as string,",
				"          BsmtCond as string,",
				"          BsmtExposure as string,",
				"          BsmtFinType1 as string,",
				"          BsmtFinSF1 as string,",
				"          BsmtFinType2 as string,",
				"          BsmtFinSF2 as string,",
				"          BsmtUnfSF as string,",
				"          TotalBsmtSF as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as string,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as string,",
				"          FullBath as string,",
				"          HalfBath as string,",
				"          BedroomAbvGr as string,",
				"          KitchenAbvGr as string,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as string,",
				"          Functional as string,",
				"          Fireplaces as string,",
				"          FireplaceQu as string,",
				"          GarageType as string,",
				"          GarageYrBlt as string,",
				"          GarageFinish as string,",
				"          GarageCars as string,",
				"          GarageArea as string,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string,",
				"          WoodDeckSF as string,",
				"          OpenPorchSF as string,",
				"          EnclosedPorch as string,",
				"          {3SsnPorch} as string,",
				"          ScreenPorch as string,",
				"          PoolArea as string,",
				"          PoolQC as string,",
				"          Fence as string,",
				"          MiscFeature as string,",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Original6",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'pettable',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> OriginalSQL",
				"source(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: '',",
				"     tableName: '',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> source1",
				"Original1 select(mapColumn(",
				"          Id,",
				"          LotFrontage,",
				"          MSSubClass,",
				"          MSZoning,",
				"          BldgType,",
				"          HouseStyle,",
				"          OverallQual,",
				"          YearBuilt,",
				"          YearRemodAdd",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: false) ~> BuildingTable",
				"Original2 select(mapColumn(",
				"          Id,",
				"          LotFrontage,",
				"          LandContour,",
				"          LotShape,",
				"          LotArea,",
				"          LotConfig,",
				"          LandSlope,",
				"          Condition1,",
				"          Condition2",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> LandTable",
				"Original3 select(mapColumn(",
				"          Id,",
				"          Street,",
				"          Alley",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Street",
				"Original4 select(mapColumn(",
				"          Id,",
				"          Utilities,",
				"          Heating,",
				"          HeatingQC,",
				"          CentralAir,",
				"          Electrical,",
				"          {1stFlrSF},",
				"          {2ndFlrSF},",
				"          LowQualFinSF,",
				"          GrLivArea,",
				"          BsmtFullBath,",
				"          BsmtHalfBath,",
				"          FullBath,",
				"          HalfBath,",
				"          BedroomAbvGr,",
				"          KitchenAbvGr,",
				"          KitchenQual,",
				"          TotRmsAbvGrd,",
				"          Functional,",
				"          Fireplaces,",
				"          FireplaceQu",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Interior",
				"Original5 select(mapColumn(",
				"          Id,",
				"          GarageType,",
				"          GarageYrBlt,",
				"          GarageFinish,",
				"          GarageCars,",
				"          GarageArea,",
				"          GarageQual,",
				"          GarageCond,",
				"          PavedDrive",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Garage",
				"Original6 select(mapColumn(",
				"          Id,",
				"          RoofStyle,",
				"          RoofMatl,",
				"          Exterior1st,",
				"          Exterior2nd,",
				"          MasVnrType,",
				"          MasVnrArea,",
				"          ExterQual,",
				"          ExterCond,",
				"          Foundation,",
				"          WoodDeckSF,",
				"          OpenPorchSF,",
				"          EnclosedPorch,",
				"          {3SsnPorch},",
				"          ScreenPorch,",
				"          PoolArea,",
				"          PoolQC,",
				"          Fence,",
				"          MiscFeature",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Exterior",
				"source1 select(mapColumn(",
				"          Id,",
				"          MiscVal,",
				"          MoSold,",
				"          YrSold,",
				"          SaleType,",
				"          SaleCondition,",
				"          SalePrice",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Sales",
				"BuildingTable filter(greaterOrEqual(YearBuilt, '1900')) ~> Yearbuilthigher1900",
				"Exterior select(mapColumn(",
				"          Id,",
				"          RoofStyle,",
				"          RoofMatl,",
				"          Exterior1st,",
				"          Exterior2nd,",
				"          MasVnrType,",
				"          MasVnrArea,",
				"          ExterQual,",
				"          ExterCond,",
				"          Foundation,",
				"          WoodDeckSF,",
				"          OpenPorchSF,",
				"          EnclosedPorch,",
				"          {3SsnPorch},",
				"          ScreenPorch,",
				"          PoolArea,",
				"          PoolQC,",
				"          Fence,",
				"          MiscFeature",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemovePoolQualityColumn",
				"Sales cast(output(",
				"          Id as string",
				"     ),",
				"     errors: true) ~> cast1",
				"Yearbuilthigher1900 cast(output(",
				"          Id as integer,",
				"          LotFrontage as integer,",
				"          MSSubClass as integer,",
				"          MSZoning as string,",
				"          BldgType as string,",
				"          HouseStyle as string,",
				"          OverallQual as string,",
				"          YearBuilt as string,",
				"          YearRemodAdd as date",
				"     ),",
				"     errors: true) ~> cast2",
				"LandTable cast(output(",
				"          Id as integer,",
				"          LotFrontage as integer,",
				"          LandContour as string,",
				"          LotShape as string,",
				"          LotArea as integer,",
				"          LotConfig as string,",
				"          LandSlope as string,",
				"          Condition1 as string,",
				"          Condition2 as string",
				"     ),",
				"     errors: true) ~> cast3",
				"Street cast(output(",
				"          Id as integer,",
				"          Street as string,",
				"          Alley as string",
				"     ),",
				"     errors: false) ~> cast4",
				"Interior cast(output(",
				"          Id as integer,",
				"          Utilities as string,",
				"          Heating as string,",
				"          HeatingQC as string,",
				"          CentralAir as string,",
				"          Electrical as string,",
				"          {1stFlrSF} as integer,",
				"          {2ndFlrSF} as string,",
				"          LowQualFinSF as string,",
				"          GrLivArea as string,",
				"          BsmtFullBath as string,",
				"          BsmtHalfBath as integer,",
				"          FullBath as integer,",
				"          HalfBath as integer,",
				"          BedroomAbvGr as integer,",
				"          KitchenAbvGr as integer,",
				"          KitchenQual as string,",
				"          TotRmsAbvGrd as integer,",
				"          Functional as string,",
				"          Fireplaces as integer,",
				"          FireplaceQu as string",
				"     ),",
				"     errors: true) ~> cast5",
				"Garage cast(output(",
				"          Id as integer,",
				"          GarageType as string,",
				"          GarageYrBlt as date,",
				"          GarageFinish as string,",
				"          GarageCars as integer,",
				"          GarageArea as integer,",
				"          GarageQual as string,",
				"          GarageCond as string,",
				"          PavedDrive as string",
				"     ),",
				"     errors: true) ~> cast6",
				"RemovePoolQualityColumn cast(output(",
				"          Id as integer,",
				"          RoofStyle as string,",
				"          RoofMatl as string,",
				"          Exterior1st as string,",
				"          Exterior2nd as string,",
				"          MasVnrType as string,",
				"          MasVnrArea as integer,",
				"          ExterQual as string,",
				"          ExterCond as string,",
				"          Foundation as string,",
				"          WoodDeckSF as integer,",
				"          OpenPorchSF as integer,",
				"          EnclosedPorch as integer,",
				"          {3SsnPorch} as integer,",
				"          ScreenPorch as integer,",
				"          PoolArea as integer,",
				"          PoolQC as string,",
				"          Fence as string",
				"     ),",
				"     errors: true) ~> cast7",
				"cast2 derive(buildingtype = iif(YearBuilt>'1970','new','old')) ~> derivedColumn1",
				"Exterior, Yearbuilthigher1900 union(byName: true)~> union1",
				"OriginalSQL select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1 aggregate(groupBy(Id,",
				"          MSSubClass,",
				"          MSZoning,",
				"          BldgType,",
				"          HouseStyle,",
				"          OverallQual,",
				"          YearBuilt,",
				"          YearRemodAdd,",
				"          buildingtype),",
				"     AverageLotfrontageMssubclass = avg (LotFrontage)) ~> aggregate1",
				"aggregate1 keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 rank(desc(MSSubClass, true),",
				"     output(RankingMssubclass as long)) ~> rank1",
				"rank1 sort(asc(Id, true)) ~> sort1",
				"sort1 assert(expectUnique(Id, false, 'assert1')) ~> assert1",
				"cast3 select(mapColumn(",
				"          Id,",
				"          LotFrontage,",
				"          LandContour,",
				"          LotShape,",
				"          LotArea,",
				"          LotConfig,",
				"          LandSlope,",
				"          Condition1",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 aggregate(groupBy(Id,",
				"          LandContour,",
				"          LotShape,",
				"          LotConfig,",
				"          LandSlope,",
				"          Condition1),",
				"     {Average(Lot frontage)} = avg(LotFrontage)) ~> aggregate2",
				"aggregate2 keyGenerate(output({Surrogate Key} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey2",
				"surrogateKey2 sort(asc(Id, true)) ~> sort2",
				"sort2 assert(expectUnique(Id, false, 'assert1')) ~> assert2",
				"cast4 keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey3",
				"surrogateKey3 sort(asc(SurrogateKey, true)) ~> sort3",
				"sort3 assert(expectUnique(SurrogateKey, false, 'assert1')) ~> assert3",
				"cast5 keyGenerate(output({Surrogate Key} as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey4",
				"surrogateKey4 sort(asc({Surrogate Key}, true)) ~> sort4",
				"sort4 assert(expectUnique(Id, false, 'assert1')) ~> assert4",
				"cast6 aggregate(groupBy(Id,",
				"          GarageType,",
				"          GarageYrBlt,",
				"          GarageFinish,",
				"          GarageCars,",
				"          GarageQual,",
				"          GarageCond,",
				"          PavedDrive),",
				"     {Average GarageArea} = avg(GarageArea)) ~> aggregate3",
				"aggregate3 keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey5",
				"surrogateKey5 sort(asc(SurrogateKey, true)) ~> sort5",
				"sort5 assert(expectUnique(Id, false, 'assert1')) ~> assert5",
				"cast7 keyGenerate(output(SurrogateKey as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey6",
				"surrogateKey6 sort(asc(SurrogateKey, true)) ~> sort6",
				"sort6 assert(expectUnique(Id, false, 'assert1')) ~> assert6",
				"assert1 select(mapColumn(",
				"          Id,",
				"          SurrogateKey,",
				"          MSSubClass,",
				"          MSZoning,",
				"          BldgType,",
				"          HouseStyle,",
				"          OverallQual,",
				"          buildingtype,",
				"          AverageLotfrontageMssubclass,",
				"          RankingMssubclass",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> BuildingDimensiontable",
				"assert1 select(mapColumn(",
				"          Id,",
				"          SurrogateKey,",
				"          YearBuilt,",
				"          YearRemodAdd",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MeasureBuilding",
				"assert2 select(mapColumn(",
				"          Id,",
				"          {Surrogate Key},",
				"          LandContour,",
				"          LotShape,",
				"          LotConfig,",
				"          LandSlope,",
				"          Condition1,",
				"          {Average(Lot frontage)}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"cast1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MiscVal as string,",
				"          MoSold as string,",
				"          YrSold as string,",
				"          SaleType as string,",
				"          SaleCondition as string,",
				"          SalePrice as string",
				"     ),",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'sales',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: true,",
				"     upsertable: false,",
				"     stagingSchemaName: 'dbo',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id,",
				"          MiscVal,",
				"          MoSold,",
				"          YrSold,",
				"          SaleType,",
				"          SaleCondition,",
				"          SalePrice",
				"     )) ~> sink1"
			]
		}
	}
}